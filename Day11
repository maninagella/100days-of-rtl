//module for tri state buffer (active low)
module tristate_buffer(input i,
                       input e,
					   output reg o);
					   
	always @(*)
	   begin
	     if(e==0)
		    o=i;
		  else
		    o=1'bz;
	   end
	   
endmodule

//module for single unit of memory 1-bit storage
module reg_cell(input i,
                input rd_bar,
				input wr_bar,
				input en,
				input clk,
				output o);
	reg rd_en;
	reg q,q_bar;
	wire d;
	
	tristate_buffer tsb1(i,wr_bar,d);
	tristate_buffer tsb2(q,rd_en,o);
	
	always @(posedge clk)
	   begin 
	    if((~wr_bar)&en)
		   q<=d;
		 else
		   q<=q;
	  end
	  
	 always @(*)
	   begin
          rd_en=(~en)|rd_bar;	   
	      q_bar= ~q;
		end
		
endmodule
// test bench for reg_cell
module tb_reg_cell();

reg i,rd_bar,wr_bar,en,clk;
wire o;


reg_cell DUT(i,rd_bar,wr_bar,en,clk,o);

always  #5 clk =~clk;

initial
   begin
     $monitor($time," %b %b %b %b : %b",i,rd_bar,wr_bar,en,o);
	 
	end
	
	
initial
  begin
 
    i=0;rd_bar=1;wr_bar=0;en=1;clk=0;
	
   #14 i=1;rd_bar=0;wr_bar=0;en=1;
   #14 i=1;rd_bar=1;wr_bar=0;en=1;
   #14 i=0;rd_bar=1;wr_bar=1;en=1;
   #14 i=1;rd_bar=0;wr_bar=1;en=1;
   #14 i=0;rd_bar=0;wr_bar=0;en=1;
   
   end
   
endmodule
   
   
     
