
`timescale 1ns / 1ps

module Fixed_Priority_Arbiter
#(parameter Num_Requests=4)(
  input [Num_Requests-1:0] Request,
  output [Num_Requests-1:0] Grant
);
    assign Grant[Num_Requests-1] = Request[Num_Requests-1];
    genvar i;

    for (i = Num_Requests-2; i >=0; i = i - 1) begin
      assign Grant[i] = Request [i] && (~(|(Request[Num_Requests-1:i+1])));
    end

endmodule

`timescale 1ns / 1ps

module Fixed_Priority_Arbiter_tb;
 parameter Num_Requests = 4;
  reg [Num_Requests-1:0] Request;
  wire [Num_Requests-1:0] Grant;

  Fixed_Priority_Arbiter uut(Request,Grant);
  
  initial begin
    Request = 4'b0000;
    $monitor("Time=%0t Request=%b Grant=%b",$time,Request,Grant);
    #200 $finish;
  end
    always #20 Request = $random;
endmodule
