// JK flip flop
module JK(input J,K,rst,clk,
          output reg q,
		  output qbar);
		  
always @(posedge clk) 
 begin
   if(!rst)
       q=1'b0;
	else 
	  begin
	  case({J,K})
	  0: q=q;
	  1: q=1'b0;
	  2: q=1'b1;
	  3: q=qbar;
	  endcase
   end
 end
 
    assign qbar=~q;
endmodule 
module JK_ff_tb;

reg J,K,rst,clk;
wire q,qbar;

JK  dut( J,K,rst,clk,q,qbar);

always #5 clk=~clk;

initial
  #2 $monitor($time,"  J=%b K=%b: q=%b",J,K,q);
initial 
 begin
       clk=0;rst=1'b1;
   #1   rst=1;
   #3 J=1'b0;K=1'b1;
   #10 J=1'b0;K=1'b0;
   #10 rst=1'b0;
   #5 rst =1'b1;
   #5 J=1'b1;K=1'b0;
   #10 J=1'b1;K=1'b1;
  
  #10 $finish;
 end
endmodule
	  
